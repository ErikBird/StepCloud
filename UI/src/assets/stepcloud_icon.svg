<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
        width="100.55148mm"
        height="53.396107mm"
        viewBox="0 0 100.55147 53.396107"
        version="1.1"
        id="svg901"
        inkscape:version="1.2.1 (9c6d41e410, 2022-07-14)"
        sodipodi:docname="stepcloud_icon.svg"
        xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
        xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
        xmlns:xlink="http://www.w3.org/1999/xlink"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:svg="http://www.w3.org/2000/svg"
        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
        xmlns:cc="http://creativecommons.org/ns#"
        xmlns:dc="http://purl.org/dc/elements/1.1/">
    <defs
            id="defs895">
        <linearGradient
                inkscape:collect="always"
                id="linearGradient1334">
            <stop
                    style="stop-color:#000000;stop-opacity:1;"
                    offset="0"
                    id="stop1330"/>
            <stop
                    style="stop-color:#000000;stop-opacity:0;"
                    offset="1"
                    id="stop1332"/>
        </linearGradient>
        <linearGradient
                id="linearGradient1131"
                inkscape:collect="always">
            <stop
                    id="stop1127"
                    offset="0"
                    style="stop-color:#111541;stop-opacity:1;"/>
            <stop
                    id="stop1129"
                    offset="1"
                    style="stop-color:#111541;stop-opacity:0;"/>
        </linearGradient>
        <filter
                inkscape:collect="always"
                style="color-interpolation-filters:sRGB"
                id="filter850"
                x="-0.16811358"
                width="1.3362272"
                y="-0.16811358"
                height="1.3362272">
            <feGaussianBlur
                    inkscape:collect="always"
                    stdDeviation="0.85051133"
                    id="feGaussianBlur852"/>
        </filter>
        <linearGradient
                gradientUnits="userSpaceOnUse"
                y2="-54.608208"
                x2="-115.6297"
                y1="-54.608208"
                x1="-171.47874"
                id="linearGradient1133"
                xlink:href="#linearGradient1131"
                inkscape:collect="always"/>
        <filter
                height="2.9507824"
                y="-0.9753912"
                width="2.9507824"
                x="-0.9753912"
                id="filter5379"
                style="color-interpolation-filters:sRGB"
                inkscape:collect="always">
            <feGaussianBlur
                    id="feGaussianBlur5381"
                    stdDeviation="6.3615139"
                    inkscape:collect="always"/>
        </filter>
        <filter
                height="4.787759"
                y="-1.8938795"
                width="4.787759"
                x="-1.8938795"
                id="filter5383"
                style="color-interpolation-filters:sRGB"
                inkscape:collect="always">
            <feGaussianBlur
                    id="feGaussianBlur5385"
                    stdDeviation="6.3615139"
                    inkscape:collect="always"/>
        </filter>
        <filter
                height="4.7877586"
                y="-1.8938793"
                width="4.7877586"
                x="-1.8938793"
                id="filter5387"
                style="color-interpolation-filters:sRGB"
                inkscape:collect="always">
            <feGaussianBlur
                    id="feGaussianBlur5389"
                    stdDeviation="6.0872014"
                    inkscape:collect="always"/>
        </filter>
        <filter
                height="2.6633119"
                y="-0.83165597"
                width="2.6633119"
                x="-0.83165595"
                id="filter5391"
                style="color-interpolation-filters:sRGB"
                inkscape:collect="always">
            <feGaussianBlur
                    id="feGaussianBlur5393"
                    stdDeviation="6.3615139"
                    inkscape:collect="always"/>
        </filter>
        <filter
                height="4.7877586"
                y="-1.8938793"
                width="4.7877586"
                x="-1.8938793"
                id="filter5395"
                style="color-interpolation-filters:sRGB"
                inkscape:collect="always">
            <feGaussianBlur
                    id="feGaussianBlur5397"
                    stdDeviation="6.0872014"
                    inkscape:collect="always"/>
        </filter>
        <clipPath
                id="clipPath7236">
            <path
                    style="color:#000000;fill:#000000;-inkscape-stroke:none"
                    d="m -10.251953,-112.28906 c -6.365156,0.43713 -12.940818,3.9312 -18.177734,11.91015 -2.431603,-5.77125 -6.411538,-8.9134 -10.939454,-10.11328 -4.584265,-1.2148 -9.709375,-0.4724 -14.33789,1.42188 -4.628516,1.89427 -8.763067,4.94063 -11.371094,8.35937 -2.491485,3.265973 -3.524834,6.879981 -2.283203,10.142581 -3.127085,-3.538999 -8.632766,-6.447483 -14.785156,-5.953125 -6.335673,0.509084 -13.281103,4.63259 -18.808596,15.292968 -14.70537,0.821576 -22.13235,11.175108 -21.98242,21.490235 0.15019,10.332624 7.89901,20.620776 23.384766,21.238281 h 0.0039 0.002 l 114.099609,0.804688 c 7.462662,0.03636 13.137339,-2.977931 16.910157,-7.527344 3.772818,-4.549414 5.647211,-10.627914 5.544921,-16.72461 -0.102289,-6.096695 -2.182519,-12.215059 -6.333984,-16.845703 -4.122798,-4.598668 -10.299936,-7.709438 -18.572265,-7.878906 3.402114,-9.235957 -2.5094835,-19.076935 -11.38476613,-23.404295 -3.34760297,-1.63221 -7.11913807,-2.47726 -10.96874987,-2.21289 z m 0.01953,0.25195 c 3.8002558,-0.25739 7.5222282,0.58544 10.83203137,2.19922 6.00695013,2.92884 10.64122163,8.40352 11.89371063,14.480696 0.587818,2.852148 0.430759,5.837004 -0.678867,8.753678 l -0.06836,0.175782 0.189453,0.0039 c 8.295311,0.128208 14.437583,3.229573 18.541015,7.806641 4.103433,4.577067 6.166249,10.634341 6.267579,16.673828 0.10133,6.039486 -1.758003,12.057374 -5.484375,16.550781 -3.726026,4.49299 -9.315228,7.469043 -16.705078,7.433594 l -114.095704,-0.804688 h -0.0039 c -15.369882,-0.61464 -22.980612,-10.776146 -23.128912,-20.978515 -0.14831,-10.203279 7.16813,-20.448242 21.80469,-21.232422 l 0.0742,-0.0039 0.0352,-0.06641 c 5.504688,-10.657533 12.383072,-14.710553 18.634774,-15.21289 6.251702,-0.502338 11.896664,2.559761 14.904297,6.183593 l 0.222656,-0.138672 c -1.481025,-3.267406 -0.443216,-6.966217 2.128906,-10.337886 2.572122,-3.37167 6.674179,-6.39788 11.261719,-8.27539 4.58754,-1.87751 9.658755,-2.60559 14.169922,-1.41016 4.511167,1.19544 8.471244,4.30475 10.867188,10.15039 l 0.0957,0.234375 0.136718,-0.212885 c 5.220923,-8.05966 11.77171,-11.54368 18.105469,-11.97266 z"
                    sodipodi:nodetypes="scssscscsccccssscssscsscccssscccscccsccsssccccc"
                    id="path558"/>
        </clipPath>
        <filter
                x="-0.093932323"
                y="-0.20164654"
                height="1.4032919"
                width="1.187867"
                id="filter703">
            <feGaussianBlur
                    stdDeviation="5.0"
                    id="feGaussianBlur561"/>
        </filter>
        <radialGradient
                inkscape:collect="always"
                xlink:href="#linearGradient1334"
                id="radialGradient1336"
                cx="-42.963951"
                cy="-75.01593"
                fx="-42.963951"
                fy="-75.01593"
                r="79.975777"
                gradientTransform="matrix(1,0,0,0.46665307,0,-40.009515)"
                gradientUnits="userSpaceOnUse"/>
        <meshgradient
                inkscape:collect="always"
                id="meshgradient1338"
                gradientUnits="userSpaceOnUse"
                x="-122.9402"
                y="-112.33669">
            <meshrow
                    id="meshrow1340">
                <meshpatch
                        id="meshpatch1342">
                    <stop
                            path="c 53.3174,0  106.635,0  159.952,0"
                            style="stop-color:#ffffff;stop-opacity:1"
                            id="stop1344"/>
                    <stop
                            path="c 0,24.8806  0,49.7611  0,74.6417"
                            style="stop-color:#000000;stop-opacity:1"
                            id="stop1346"/>
                    <stop
                            path="c -53.3174,0  -106.635,0  -159.952,0"
                            style="stop-color:#ffffff;stop-opacity:1"
                            id="stop1348"/>
                    <stop
                            path="c 0,-24.8806  0,-49.7611  0,-74.6417"
                            style="stop-color:#000000;stop-opacity:1"
                            id="stop1350"/>
                </meshpatch>
            </meshrow>
        </meshgradient>
        <radialGradient
                inkscape:collect="always"
                xlink:href="#linearGradient1334"
                id="radialGradient3125"
                gradientUnits="userSpaceOnUse"
                gradientTransform="matrix(1,0,0,0.46665307,0,-40.009515)"
                cx="-42.963951"
                cy="-75.01593"
                fx="-42.963951"
                fy="-75.01593"
                r="79.975777"/>
    </defs>
    <sodipodi:namedview
            inkscape:guide-bbox="true"
            showguides="true"
            id="base"
            pagecolor="#ffffff"
            bordercolor="#666666"
            borderopacity="1.0"
            inkscape:pageopacity="0.0"
            inkscape:pageshadow="2"
            inkscape:zoom="1.8101934"
            inkscape:cx="852.67132"
            inkscape:cy="-15.46796"
            inkscape:document-units="mm"
            inkscape:current-layer="g1115"
            inkscape:document-rotation="0"
            showgrid="false"
            showborder="false"
            inkscape:window-width="3840"
            inkscape:window-height="2091"
            inkscape:window-x="1920"
            inkscape:window-y="32"
            inkscape:window-maximized="1"
            inkscape:pagecheckerboard="0"
            inkscape:showpageshadow="2"
            inkscape:deskcolor="#d1d1d1">
        <sodipodi:guide
                inkscape:locked="false"
                id="guide830"
                orientation="1,0"
                position="71.053218,42.584492"/>
        <sodipodi:guide
                inkscape:locked="false"
                id="guide832"
                orientation="0,1"
                position="74.021488,36.758231"/>
        <sodipodi:guide
                inkscape:locked="false"
                id="guide839"
                orientation="-0.70710678,0.70710678"
                position="49.075058,47.152562"/>
        <sodipodi:guide
                inkscape:locked="false"
                id="guide843"
                orientation="-0.70710678,0.70710678"
                position="84.888305,18.237394"/>
        <sodipodi:guide
                inkscape:locked="false"
                id="guide845"
                orientation="0.70710678,0.70710678"
                position="107.75585,32.411491"/>
        <sodipodi:guide
                inkscape:locked="false"
                id="guide849"
                orientation="0.70710678,0.70710678"
                position="83.848865,-8.2209349"/>
        <sodipodi:guide
                inkscape:locked="false"
                id="guide854"
                orientation="0.70710678,0.70710678"
                position="177.86263,-42.257223"/>
        <sodipodi:guide
                inkscape:locked="false"
                id="guide856"
                orientation="0,1"
                position="97.221637,38.383774"/>
        <sodipodi:guide
                inkscape:locked="false"
                id="guide860"
                orientation="0.70710678,0.70710678"
                position="97.221637,38.383774"/>
        <sodipodi:guide
                inkscape:locked="false"
                id="guide862"
                orientation="-0.70710678,0.70710678"
                position="71.053218,64.552194"/>
        <sodipodi:guide
                id="guide77"
                orientation="0,-1"
                position="52.412178,35.13586"
                inkscape:locked="false"/>
    </sodipodi:namedview>
    <metadata
            id="metadata898">
        <rdf:RDF>
            <cc:Work
                    rdf:about="">
                <dc:format>image/svg+xml</dc:format>
                <dc:type
                        rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
            </cc:Work>
        </rdf:RDF>
    </metadata>
    <g
            transform="translate(38.775221,-15.726322)"
            style="display:inline"
            inkscape:label="Shaddow"
            id="layer2"
            inkscape:groupmode="layer"/>
    <g
            style="display:none"
            transform="translate(214.62864,71.15575)"
            inkscape:label="Shaddow"
            inkscape:groupmode="layer"
            id="layer1">
        <g
                style="fill:url(#linearGradient1133);fill-opacity:1;stroke:#000000;stroke-opacity:1"
                transform="translate(-0.02119627,0.18923595)"
                id="g905">
            <rect
                    transform="rotate(-45)"
                    ry="1.3877793e-16"
                    rx="1.3877793e-16"
                    y="-148.07036"
                    x="-71.074379"
                    height="16.27002"
                    width="16.27002"
                    id="rect1083"
                    style="fill:#111541;fill-opacity:1;stroke:#000000;stroke-width:1.204;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter5379)"/>
            <rect
                    style="fill:#111541;fill-opacity:1;stroke:#000000;stroke-width:1.204;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter5383)"
                    id="rect1096"
                    width="8.3794317"
                    height="8.3794317"
                    x="-67.232857"
                    y="-144.19289"
                    rx="1.3877793e-16"
                    ry="1.3877793e-16"
                    transform="rotate(-45)"/>
            <rect
                    transform="matrix(0.7389717,-0.7389717,0.7389717,0.7389717,-404.75269,-118.97901)"
                    ry="1.3279374e-16"
                    rx="1.3279374e-16"
                    y="216.39"
                    x="129.02528"
                    height="8.0181055"
                    width="8.0181055"
                    id="rect842"
                    style="mix-blend-mode:normal;fill:#111541;fill-opacity:1;stroke:#000000;stroke-width:1.15208;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter5387)"/>
            <g
                    style="fill:#111541;fill-opacity:1;stroke:#000000;stroke-opacity:1;filter:url(#filter5391)"
                    id="g837"
                    transform="translate(-0.09889531,0.23237322)">
                <rect
                        transform="matrix(0.7389717,-0.7389717,0.7389717,0.7389717,-404.75269,-118.97901)"
                        ry="1.3279374e-16"
                        rx="1.3279374e-16"
                        y="212.67972"
                        x="125.34941"
                        height="15.568446"
                        width="15.568446"
                        id="rect848"
                        style="fill:#111541;fill-opacity:1;stroke:#000000;stroke-width:1.15208;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter850)"/>
            </g>
            <rect
                    style="mix-blend-mode:normal;fill:#111541;fill-opacity:1;stroke:#000000;stroke-width:1.15208;stroke-linecap:round;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;filter:url(#filter5395)"
                    id="rect874"
                    width="8.0181055"
                    height="8.0181055"
                    x="129.02528"
                    y="216.39"
                    rx="1.3279374e-16"
                    ry="1.3279374e-16"
                    transform="matrix(0.7389717,-0.7389717,0.7389717,0.7389717,-404.73149,-119.16826)"/>
        </g>
    </g>
    <g
            id="g1115"
            inkscape:groupmode="layer"
            inkscape:label="Logo "
            transform="translate(214.62864,71.15575)"
            style="display:inline">
        <text
                id="text866"
                y="-63.362431"
                x="-75.751663"
                style="font-style:normal;font-weight:normal;font-size:12.5958px;line-height:1.25;font-family:sans-serif;letter-spacing:0px;word-spacing:0px;fill:#f0f0f0;fill-opacity:1;stroke:none;stroke-width:0.314895"
                xml:space="preserve"><tspan
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:37.7874px;font-family:Ubuntu;-inkscape-font-specification:'Ubuntu, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-feature-settings:normal;text-align:start;writing-mode:lr-tb;text-anchor:start;fill:#f0f0f0;fill-opacity:1;stroke-width:0.314895"
         y="-63.362431"
         x="-75.751663"
         id="tspan864"
         sodipodi:role="line" /></text>
        <g
                clip-path="url(#clipPath7236)"
                id="g604"
                style="fill:url(#meshgradient1338);fill-opacity:1;stroke:#000000;stroke-width:6;stroke-dasharray:none;stroke-opacity:1"
                transform="translate(37.164647,-28.394185)">
            <g
                    id="g602"
                    style="fill:url(#radialGradient1336);fill-opacity:1;stroke:#000000;stroke-width:6;stroke-dasharray:none;stroke-opacity:1">
                <g
                        id="path600"
                        style="fill:url(#radialGradient3125);stroke-linecap:round;stroke-linejoin:round;filter:url(#filter703)"/>
            </g>
        </g>
        <g
                id="g3228"
                transform="translate(-145.98867,45.050986)">
            <g
                    id="g1674"
                    style="fill:#01ccff;fill-opacity:1"
                    transform="translate(-0.02119627,0.18923595)">
                <ellipse
                        style="fill:#01ccff;fill-opacity:1;stroke:none;stroke-width:4.98499;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
                        id="path1536"
                        cx="-52.221497"
                        cy="-80.051743"
                        rx="10.581296"
                        ry="10.512224"/>
                <ellipse
                        style="display:inline;fill:#01ccff;fill-opacity:1;stroke:none;stroke-width:4.98499;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
                        id="path1536-5"
                        cx="15.436563"
                        cy="-80.051743"
                        rx="10.581296"
                        ry="10.512224"/>
                <ellipse
                        style="display:inline;fill:#01ccff;fill-opacity:1;stroke:none;stroke-width:4.98499;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
                        id="path1536-3"
                        cx="-17.65741"
                        cy="-80.051743"
                        rx="10.581296"
                        ry="10.512224"/>
                <rect
                        style="fill:#01ccff;fill-opacity:1;stroke:none;stroke-width:4.98499;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
                        id="rect1635"
                        width="25.233747"
                        height="4.7446065"
                        x="-45.367073"
                        y="-82.424049"/>
                <rect
                        style="display:inline;fill:#01ccff;fill-opacity:1;stroke:none;stroke-width:4.98499;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1"
                        id="rect1635-5"
                        width="25.233747"
                        height="4.7446065"
                        x="-14.241559"
                        y="-82.424049"/>
            </g>
            <path
                    style="fill:none;stroke:#5c5c5c;stroke-width:4.065;stroke-linecap:square;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1;paint-order:normal"
                    d="m -52.565926,-64.843131 69.440316,-0.228094 c 16.497911,-0.315532 18.378314,-28.208006 -0.625261,-29.011763 5.907886,-14.781782 -18.8341049,-31.159202 -28.182306,-9.960832 0.488578,-8.18306 -19.708874,-12.21926 -22.432705,4.199031 -1.431997,-7.437921 -17.244081,-5.744621 -18.092493,4.984124 -21.055196,3.465626 -16.519954,29.236134 -0.107551,30.017534 z"
                    id="path3219"
                    sodipodi:nodetypes="ccccccc"/>
        </g>
    </g>
    <script
            id="mesh_polyfill"
            type="text/javascript">
        !function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const
        n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new
        x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new
        x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let
        e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return
        18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let
        e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let
        l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new
        g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new
        g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new
        g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1
        or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new
        g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new
        g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new
        g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new
        g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new
        g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new
        g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js:
        Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new
        x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in
        e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return
        a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let
        e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const
        r=e*e,n=s*s,o=e*e*e,i=s*s*s;return
        t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let
        e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let
        t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let
        t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return
        r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return
        new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new
        x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return
        e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class
        g{constructor(t,e,s,r,n,o){void
        0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine:
        ${this.a} ${this.c} ${this.e} \n ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js:
        argument to Affine.append is not affine!&quot;);let
        e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return
        new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const
        s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let
        i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let
        r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class
        m{constructor(t,e){this.nodes=t,this.colors=e}split(){let
        t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const
        r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let
        t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new
        m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let
        s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new
        w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class
        b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let
        e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new
        x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let
        r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let
        i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let
        u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js:
        &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let
        e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new
        x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new
        x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let
        s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let
        n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let
        i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new
        m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new
        Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let
        t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let
        t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let
        t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let
        s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let
        n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let
        t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let
        e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let
        t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new
        m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t
        instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else
        if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let
        e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let
        o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const
        i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const
        a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let
        l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let
        u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new
        x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new
        x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let
        g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const
        w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const
        m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const
        o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const
        i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let
        p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let
        g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new
        x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new
        x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let
        S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
    </script>
</svg>
