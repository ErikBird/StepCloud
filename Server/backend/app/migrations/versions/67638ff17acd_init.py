"""Init

Revision ID: 67638ff17acd
Revises: 
Create Date: 2022-07-03 21:19:29.733721

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision = '67638ff17acd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer',
                    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('vat_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('contract_level', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_customer_id'), 'customer', ['id'], unique=False)
    op.create_index(op.f('ix_customer_name'), 'customer', ['name'], unique=False)
    op.create_index(op.f('ix_customer_vat_id'), 'customer', ['vat_id'], unique=False)
    op.create_table('devicesupplier',
                    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_devicesupplier_id'), 'devicesupplier', ['id'], unique=False)
    op.create_index(op.f('ix_devicesupplier_name'), 'devicesupplier', ['name'], unique=False)
    op.create_table('eventtype',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_eventtype_id'), 'eventtype', ['id'], unique=False)
    op.create_index(op.f('ix_eventtype_label'), 'eventtype', ['label'], unique=True)
    op.create_table('logtype',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_logtype_id'), 'logtype', ['id'], unique=False)
    op.create_index(op.f('ix_logtype_label'), 'logtype', ['label'], unique=True)
    op.create_table('sensortype',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_sensortype_id'), 'sensortype', ['id'], unique=False)
    op.create_index(op.f('ix_sensortype_label'), 'sensortype', ['label'], unique=True)
    op.create_table('visualizationtype',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_visualizationtype_id'), 'visualizationtype', ['id'], unique=False)
    op.create_index(op.f('ix_visualizationtype_label'), 'visualizationtype', ['label'], unique=True)
    op.create_table('customeroffice',
                    sa.Column('customer_id', sa.Integer(), nullable=False),
                    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('department', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('sub_department', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('zip_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('additional_address_information', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('street', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_customeroffice_id'), 'customeroffice', ['id'], unique=False)
    op.create_table('device',
                    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('image_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('supplier_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['supplier_id'], ['devicesupplier.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_device_id'), 'device', ['id'], unique=False)
    op.create_index(op.f('ix_device_name'), 'device', ['name'], unique=False)
    op.create_table('user',
                    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.Column('is_superuser', sa.Boolean(), nullable=True),
                    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('customer_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email')
                    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('customerdevice',
                    sa.Column('network_ip', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('registration_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('gateway_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('device_id', sa.Integer(), nullable=False),
                    sa.Column('customer_office_id', sa.Integer(), nullable=False),
                    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('interface_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.ForeignKeyConstraint(['customer_office_id'], ['customeroffice.id'], ),
                    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_customerdevice_id'), 'customerdevice', ['id'], unique=False)
    op.create_table('gateway',
                    sa.Column('uuid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('customer_office_id', sa.Integer(), nullable=False),
                    sa.Column('serial_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('software_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('hardware_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.ForeignKeyConstraint(['customer_office_id'], ['customeroffice.id'], ),
                    sa.PrimaryKeyConstraint('uuid')
                    )
    op.create_index(op.f('ix_gateway_uuid'), 'gateway', ['uuid'], unique=False)
    op.create_table('identifier',
                    sa.Column('expression', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('device_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
                    sa.PrimaryKeyConstraint('expression')
                    )
    op.create_index(op.f('ix_identifier_expression'), 'identifier', ['expression'], unique=False)
    op.create_table('deviceevent',
                    sa.Column('time_recorded', sa.DateTime(timezone=True), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('customer_device_id', sa.Integer(), nullable=False),
                    sa.Column('gateway_uuid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('event_type_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['customer_device_id'], ['customerdevice.id'], ),
                    sa.ForeignKeyConstraint(['event_type_id'], ['eventtype.id'], ),
                    sa.ForeignKeyConstraint(['gateway_uuid'], ['gateway.uuid'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_deviceevent_id'), 'deviceevent', ['id'], unique=False)
    op.create_table('logdata',
                    sa.Column('data', sa.JSON(), nullable=True),
                    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('event_id', sa.Integer(), nullable=False),
                    sa.Column('log_type_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['event_id'], ['deviceevent.id'], ),
                    sa.ForeignKeyConstraint(['log_type_id'], ['logtype.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_logdata_id'), 'logdata', ['id'], unique=False)
    op.create_index(op.f('ix_logdata_label'), 'logdata', ['label'], unique=False)
    op.create_table('sensordata',
                    sa.Column('data', sa.JSON(), nullable=True),
                    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('event_id', sa.Integer(), nullable=False),
                    sa.Column('sensor_type_id', sa.Integer(), nullable=False),
                    sa.Column('visualization_type_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['event_id'], ['deviceevent.id'], ),
                    sa.ForeignKeyConstraint(['sensor_type_id'], ['sensortype.id'], ),
                    sa.ForeignKeyConstraint(['visualization_type_id'], ['visualizationtype.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_sensordata_id'), 'sensordata', ['id'], unique=False)
    op.create_index(op.f('ix_sensordata_label'), 'sensordata', ['label'], unique=False)
    op.create_table('settingdata',
                    sa.Column('data', sa.JSON(), nullable=True),
                    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('event_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['event_id'], ['deviceevent.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_settingdata_id'), 'settingdata', ['id'], unique=False)
    op.create_index(op.f('ix_settingdata_label'), 'settingdata', ['label'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_settingdata_label'), table_name='settingdata')
    op.drop_index(op.f('ix_settingdata_id'), table_name='settingdata')
    op.drop_table('settingdata')
    op.drop_index(op.f('ix_sensordata_label'), table_name='sensordata')
    op.drop_index(op.f('ix_sensordata_id'), table_name='sensordata')
    op.drop_table('sensordata')
    op.drop_index(op.f('ix_logdata_label'), table_name='logdata')
    op.drop_index(op.f('ix_logdata_id'), table_name='logdata')
    op.drop_table('logdata')
    op.drop_index(op.f('ix_deviceevent_id'), table_name='deviceevent')
    op.drop_table('deviceevent')
    op.drop_index(op.f('ix_identifier_expression'), table_name='identifier')
    op.drop_table('identifier')
    op.drop_index(op.f('ix_gateway_uuid'), table_name='gateway')
    op.drop_table('gateway')
    op.drop_index(op.f('ix_customerdevice_id'), table_name='customerdevice')
    op.drop_table('customerdevice')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_device_name'), table_name='device')
    op.drop_index(op.f('ix_device_id'), table_name='device')
    op.drop_table('device')
    op.drop_index(op.f('ix_customeroffice_id'), table_name='customeroffice')
    op.drop_table('customeroffice')
    op.drop_index(op.f('ix_visualizationtype_label'), table_name='visualizationtype')
    op.drop_index(op.f('ix_visualizationtype_id'), table_name='visualizationtype')
    op.drop_table('visualizationtype')
    op.drop_index(op.f('ix_sensortype_label'), table_name='sensortype')
    op.drop_index(op.f('ix_sensortype_id'), table_name='sensortype')
    op.drop_table('sensortype')
    op.drop_index(op.f('ix_logtype_label'), table_name='logtype')
    op.drop_index(op.f('ix_logtype_id'), table_name='logtype')
    op.drop_table('logtype')
    op.drop_index(op.f('ix_eventtype_label'), table_name='eventtype')
    op.drop_index(op.f('ix_eventtype_id'), table_name='eventtype')
    op.drop_table('eventtype')
    op.drop_index(op.f('ix_devicesupplier_name'), table_name='devicesupplier')
    op.drop_index(op.f('ix_devicesupplier_id'), table_name='devicesupplier')
    op.drop_table('devicesupplier')
    op.drop_index(op.f('ix_customer_vat_id'), table_name='customer')
    op.drop_index(op.f('ix_customer_name'), table_name='customer')
    op.drop_index(op.f('ix_customer_id'), table_name='customer')
    op.drop_table('customer')
    # ### end Alembic commands ###
